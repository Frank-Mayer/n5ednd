@use "color";
@import "reset";
@import "JetBrainsMono";
@import "input";
@import "page01";
@import "scrollbar";

$max-page-width: 800px;

:root {
  --page-width: min(#{$max-page-width}, 100vw);
  --font-size-small: calc(var(--page-width) * 0.01);
  --font-size-regular: calc(var(--page-width) * 0.015);
  --font-size-big: calc(var(--page-width) * 0.045);
  padding: 1rem;
  background: {
    color: color.$background;
    image: url(../img/background.webp);
    size: cover;
    position: center;
    repeat: no-repeat;
    attachment: fixed;
  }
  color: color.$foreground;
}

div#root > input {
  background-color: rgba(color.$background, 0.5);
}

* {
  font-family: "JetBrains Mono", monospace !important;
  font-size: var(--font-size-regular);
  color: color.$foreground;
  text-rendering: optimizelegibility;
  image-rendering: optimizequality;
  shape-rendering: geometricprecision;
  color-scheme: dark !important;
}

input {
  font-size: 1em;

  &[type="checkbox"] {
    width: 1em;
    height: 1em;
  }
}

:root {
  cursor: default;
}

input:not([type="checkbox"]):read-only {
  cursor: not-allowed !important;
}

textarea:read-write,
input:read-write {
  cursor: text !important;
}

select {
  cursor: pointer !important;
}

div#root {
  padding: {
    top: 10rem;
    bottom: 16rem;
  }
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1rem;

  // pages
  > div {
    &#toolbar {
      background-color: rgba(color.$foreground, 0.75);
      display: flex;
      flex-direction: row;
      align-items: center;
      justify-content: space-evenly;
      padding: var(--font-size-small) var(--font-size-big);
      gap: var(--font-size-regular);

      * {
        color: color.$background !important;
      }

      > label {
        cursor: pointer;
        display: grid;
        grid-template-rows: auto auto;
        grid-template-columns: auto;
        grid-gap: 0.5em;
        align-items: center;
        justify-items: center;
        justify-content: center;
        align-content: center;

        > svg,
        > img {
          height: var(--font-size-big);
          width: auto;
        }

        > span {
          font-size: var(--font-size-small);
        }

        &:hover {
          filter: drop-shadow(0 0 0.5em rgba(color.$background, 0.75));
        }
      }
    }
    &:not(#toolbar) {
      background-color: rgba(color.$background, 0.75);
    }
    padding: 1rem;
    max-width: $max-page-width;
    margin: 0 auto;
    border-radius: 1rem;
    backdrop-filter: blur(10px);

    input,
    select {
      background-color: transparent;
    }
  }
}

// debug
// @function repeat($str, $n) {
//   $c: "";
//   @for $i from 1 through $n {
//     $c: $c + $str;
//   }
//   @return $c;
// }

// @for $i from 1 through 100 {
//   #{":root" + repeat(">*", $i)} {
//     $r: random(255);
//     $g: random(255);
//     $b: random(255);
//     background-color: rgba($r, $g, $b, 0.01 * $i) !important;
//     border: 1px solid rgba($r, $g, $b, 0.1 * $i) !important;
//   }
// }
