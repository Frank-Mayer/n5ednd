@use "additionalStyles";
@use "color";
$gap: 8px;

.p01 {
  display: grid;
  grid-template-columns: repeat(3, calc(33.333% - #{$gap}));
  grid-template-rows: 1fr 3fr repeat(2, 2fr);
  grid-column-gap: $gap;
  grid-row-gap: $gap;

  > * {
    width: 100%;
  }

  > .s01 {
    grid-area: 1 / 1 / 2 / 2;

    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr);
    grid-column-gap: $gap;
    grid-row-gap: $gap;

    > * {
      @include additionalStyles.border;
    }

    > :nth-child(1) {
      grid-area: 1 / 1 / 2 / 3;
    }
    > :nth-child(2) {
      grid-area: 2 / 1 / 3 / 2;
      > span {
        font-size: 0.75em;
      }
    }
    > :nth-child(3) {
      grid-area: 2 / 2 / 3 / 3;
      > span {
        font-size: 0.75em;
      }
    }
    > :nth-child(4) {
      grid-area: 3 / 1 / 4 / 3;
    }
  }

  > .s02 {
    grid-area: 1 / 2 / 2 / 4;
    @include additionalStyles.border;

    > * {
      width: 100%;
    }

    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(2, 1fr);
    grid-column-gap: $gap;
    grid-row-gap: $gap;

    > :nth-child(1) {
      grid-area: 1 / 1 / 2 / 3;
    }
    > :nth-child(2) {
      grid-area: 1 / 3 / 2 / 5;
    }
    > :nth-child(3) {
      grid-area: 1 / 5 / 2 / 7;
    }
    > :nth-child(4) {
      grid-area: 2 / 1 / 3 / 2;
    }
    > :nth-child(5) {
      grid-area: 2 / 2 / 3 / 3;
    }
    > :nth-child(6) {
      grid-area: 2 / 3 / 3 / 5;
    }
    > :nth-child(7) {
      grid-area: 2 / 5 / 3 / 6;
    }
    > :nth-child(8) {
      grid-area: 2 / 6 / 3 / 7;
    }
  }

  > .s03 {
    grid-area: 2 / 1 / 4 / 2;

    > table {
      border-collapse: collapse;
      border-spacing: 0.2rem 1rem;
      width: 100%;

      > tbody {
        display: flex;
        gap: 1rem;
        flex-direction: column;
        flex-wrap: nowrap;
        justify-content: space-between;
        align-items: stretch;

        > tr {
          @include additionalStyles.border;
          padding: 0.25em;

          > td {
            margin-left: auto;
            width: 100%;
            padding-left: 0.5em;

            > .ListView {
              grid-area: 1 / 2 / 2 / 3;
              > li,
              > li > * {
                font-size: var(--font-size-small) !important;
              }
            }
          }
        }
      }
    }
  }

  > .s04 {
    grid-area: 2 / 2 / 3 / 3;
    display: grid;
    grid-template-columns: repeat(6, 1fr);
    grid-template-rows: repeat(4, 1fr);
    grid-column-gap: 0;
    grid-row-gap: 0;
    justify-items: center;
    align-items: center;

    > * {
      @include additionalStyles.border;

      &.PrimitiveView.big {
        height: 6.2em;
        > input {
          width: 2em !important;
        }
      }

      &:nth-child(1) {
        grid-area: 1 / 1 / 2 / 3;
        width: calc(100% - 0.5em) !important;
      }
      &:nth-child(2) {
        grid-area: 1 / 3 / 2 / 5;
        width: calc(100% - 0.5em) !important;
      }
      &:nth-child(3) {
        grid-area: 1 / 5 / 2 / 7;
        width: calc(100% - 0.5em) !important;
      }
      &:nth-child(4) {
        grid-area: 2 / 1 / 3 / 4;
        width: 100% !important;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-right-color: rgba(color.$foreground, 0.2);
      }
      &:nth-child(5) {
        grid-area: 2 / 4 / 3 / 7;
        width: 100% !important;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        border-left-color: rgba(color.$foreground, 0.2);
      }
      &:nth-child(6) {
        grid-area: 3 / 1 / 4 / 4;
        width: 100% !important;
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
        border-right-color: rgba(color.$foreground, 0.2);
      }
      &:nth-child(7) {
        grid-area: 3 / 4 / 4 / 7;
        width: 100% !important;
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
        border-left-color: rgba(color.$foreground, 0.2);
      }
      &:nth-child(8) {
        grid-area: 4 / 1 / 5 / 4;
        width: calc(100% - 0.5em) !important;
      }
      &:nth-child(9) {
        grid-area: 4 / 4 / 5 / 7;
        width: calc(100% - 0.5em) !important;
      }
    }
  }

  > .s05 {
    grid-area: 2 / 3 / 3 / 4;

    display: grid;
    gap: 1rem;
    grid-template-rows: repeat(4, 1fr);
  }

  > .s06 {
    grid-area: 3 / 2 / 4 / 3;
  }

  > .s07 {
    grid-area: 3 / 3 / 5 / 4;

    display: grid;
    gap: 1rem;
    grid-template-rows: 1fr auto;

    > .ListView {
      @include additionalStyles.border;
      height: 100%;
      input {
        width: 100%;
      }
    }

    > label {
      color: rgba(color.$foreground, 0.5);
      width: 100%;
      text-align: center;
    }
  }

  > .s08 {
    grid-area: 4 / 1 / 5 / 3;
    @include additionalStyles.border;

    > .PrimitiveView {
      @include additionalStyles.border;
      width: fit-content;
      > span {
        width: fit-content;
        font-size: var(--font-size-big);
      }
    }

    > table.ListView {
      max-height: 200px;
    }
  }
}
